; Accepts a voicemail message and tests that the voicemail application returned successfully.
; Exiting out to any other context is a failure.
;

[listener]
exten => s,1,Answer()
exten => s,n,Echo()

[voicemail]

exten => 1234,1,NoOp()
    same => n,Verbose(1,Expected new messages: ${EXPECTED_NEW})
    same => n,Verbose(1,Expected old messages: ${EXPECTED_OLD})
    same => n,Verbose(1,Expected urgent messages: ${EXPECTED_URGENT})
    same => n,Set(newMessages=${VMCOUNT(1234@default,INBOX)})
    same => n,Set(oldMessages=${VMCOUNT(1234@default,Old)})
    same => n,Set(urgentMessages=${VMCOUNT(1234@default,Urgent)})
    same => n,Verbose(1,VMCOUNT returned ${newMessages} new messages in INBOX)
    same => n,Verbose(1,VMCOUNT returned ${oldMessages} old messages in Old)
    same => n,Verbose(1,VMCOUNT returned ${urgentMessages} urgent messages in Urgent)
    same => n,GotoIf($[${EXPECTED_NEW} = ${newMessages}]?:fail)
    same => n,GotoIf($[${EXPECTED_OLD} = ${oldMessages}]?:fail)
    same => n,GotoIf($[${EXPECTED_URGENT} = ${urgentMessages}]?:fail)
    same => n(pass),NoOp()
    same => n,Verbose(1,All expected results match actuals; test passed)
    same => n,UserEvent(TestResult,result: pass, status: All expected results match actuals)
    same => n,Wait(5)
    same => n,Hangup()
    same => n(fail),NoOp()
    same => n,Verbose(1,Expected results do not match actuals; test failed)
    same => n,UserEvent(TestResult,result: fail, status: Expected results do not match actuals)
    same => n,Wait(5)
    same => n,Hangup()

exten => o,1,UserEvent(TestResult,result: fail,status: failed to exit successfully)
    same => n,Wait(2)
    same => n,Hangup()

exten => i,1,UserEvent(TestResult,result: fail,status: failed to exit successfully)
    same => n,Wait(2)
    same => n,Hangup()

exten => e,1,UserEvent(TestResult,result: fail,status: failed to exit successfully)
    same => n,Wait(2)
    same => n,Hangup()

exten => a,1,UserEvent(TestResult,result: fail,status: failed to exit successfully)
    same => n,Wait(2)
    same => n,Hangup()

exten => t,1,UserEvent(TestResult,result: fail,status: failed to exit successfully)
    same => n,Wait(2)
    same => n,Hangup()



; Accepts a voicemail message and tests that the voicemail application returned successfully.
; Exiting out to any other context is a failure.
;

[voicemail]

;
; Note: these two extensions are left as explicit, instead of a pattern match, as it
; exposes the bug in ASTERISK-18243
;

exten => 1234,1,NoOp()
    same => n,VoiceMail(${EXTEN}@default,u,d(othercontext))
    same => n,GotoIf($[${VMSTATUS} = USEREXIT]?pass:fail)
    same => n(fail),UserEvent(TestResult,result: fail, status: VoiceMail failed to exit successfully - returned ${VMSTATUS})
    same => n,Hangup()
    same => n(pass),NoOp()
    same => n,UserEvent(TestResult,result: pass, status: VoiceMail exited successfully with USEREXIT)
    same => n,Hangup()

exten => 5678,1,NoOp()
    same => n,VoiceMail(${EXTEN}@default,u,d(othercontext))
    same => n,GotoIf($[${VMSTATUS} = USEREXIT]?pass:fail)
    same => n(fail),UserEvent(TestResult,result: fail, status: VoiceMail failed to exit successfully - returned ${VMSTATUS})
    same => n,Hangup()
    same => n(pass),NoOp()
    same => n,UserEvent(TestResult,result: pass, status: VoiceMail exited successfully with USEREXIT)
    same => n,Hangup()

exten => 9000,1,NoOp()
    same => n,VoiceMail(9000@default,u)
    same => n,GotoIf($[${VMSTATUS} = USEREXIT]?pass:fail)
    same => n(fail),UserEvent(TestResult,result: fail, status: VoiceMail failed to exit successfully - returned ${VMSTATUS})
    same => n,Hangup()
    same => n(pass),NoOp()
    same => n,UserEvent(TestResult,result: pass, status: VoiceMail exited successfully with USEREXIT)
    same => n,Hangup()

exten => o,1,UserEvent(TestResult,result: operator,status: exited through operator extension)
    same => n,Wait(2)
    same => n,Hangup()

exten => i,1,UserEvent(TestResult,result: fail,status: failed to exit successfully)
    same => n,Wait(2)
    same => n,Hangup()

exten => e,1,UserEvent(TestResult,result: fail,status: failed to exit successfully)
    same => n,Wait(2)
    same => n,Hangup()

exten => a,1,UserEvent(TestResult,result: attendant,status: exited through a extension)
    same => n,Wait(2)
    same => n,Hangup()

exten => t,1,UserEvent(TestResult,result: fail,status: failed to exit successfully)
    same => n,Wait(2)
    same => n,Hangup()

;
; Test leaving out into another context
;
[othercontext]

exten => 1,1,UserEvent(TestResult,result: othercontext@1,status: exited through 1 extension)
    same => n,Wait(2)
    same => n,Hangup()

exten => 3,1,UserEvent(TestResult,result: othercontext@3,status: exited through 3 extension)
    same => n,Wait(2)
    same => n,Hangup()

exten => 1234,1,UserEvent(TestResult,result: othercontext@1234,status: exited through 1234 extension)
    same => n,Wait(2)
    same => n,Hangup()

exten => 5678,1,UserEvent(TestResult,result: othercontext@5678,status: exited through 5678 extension)
    same => n,Wait(2)
    same => n,Hangup()

exten => o,1,UserEvent(TestResult,result: othercontext@operator, status: exited through operator extension)
    same => n,Wait(2)
    same => n,Hangup()

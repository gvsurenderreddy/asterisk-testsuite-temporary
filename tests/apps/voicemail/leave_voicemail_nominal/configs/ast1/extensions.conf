; Accepts a voicemail message and tests that the voicemail application returned successfully.
; Exiting out to any other context is a failure.
;

[voicemail]

;
; Note that this one uses the unavailable message
;
exten => 1234,1,NoOp()
    same => n,VoiceMail(1234@default,u)
    same => n,GotoIf($[${VMSTATUS} = SUCCESS]?pass:fail)
    same => n(fail),UserEvent(TestResult,result: fail, status: VoiceMail failed to exit successfully - returned ${VMSTATUS})
    same => n,Wait(2)
    same => n,Hangup()
    same => n(pass),NoOp()
    same => n,UserEvent(TestResult,result: pass, status: VoiceMail exited successfully)
    same => n,Wait(2)
    same => n,Hangup()

;
; Note that this one uses the busy message
;
exten => 5678,1,NoOp()
    same => n,VoiceMail(5678@default,b)
    same => n,GotoIf($[${VMSTATUS} = SUCCESS]?pass:fail)
    same => n(fail),UserEvent(TestResult,result: fail, status: VoiceMail failed to exit successfully - returned ${VMSTATUS})
    same => n,Wait(2)
    same => n,Hangup()
    same => n(pass),NoOp()
    same => n,UserEvent(TestResult,result: pass, status: VoiceMail exited successfully)
    same => n,Wait(2)
    same => n,Hangup()

;
; Note that this one uses no special message code, and should default to unavailable.
; It also tests delivering messages to a different context.
;
exten => 9000,1,NoOp()
    same => n,VoiceMail(1234@notdefault)
    same => n,GotoIf($[${VMSTATUS} = SUCCESS]?pass:fail)
    same => n(fail),UserEvent(TestResult,result: fail, status: VoiceMail failed to exit successfully - returned ${VMSTATUS})
    same => n,Wait(2)
    same => n,Hangup()
    same => n(pass),NoOp()
    same => n,UserEvent(TestResult,result: pass, status: VoiceMail exited successfully)
    same => n,Wait(2)
    same => n,Hangup()

exten => o,1,UserEvent(TestResult,result: fail,status: failed to exit successfully through '#' key)

exten => i,1,UserEvent(TestResult,result: fail,status: failed to exit successfully through '#' key)

exten => e,1,UserEvent(TestResult,result: fail,status: failed to exit successfully through '#' key)

exten => a,1,UserEvent(TestResult,result: fail,status: failed to exit successfully through '#' key)

exten => t,1,UserEvent(TestResult,result: fail,status: failed to exit successfully through '#' key)

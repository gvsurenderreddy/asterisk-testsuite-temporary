; Confbridge contexts and extensions

[confbridge]
; Phase 0
; 0 should perform conference exit
exten => single_option, 1, NoOp()
	same => n,Set(CONFBRIDGE(menu,0)=leave_conference)
	same => n,ConfBridge(1)
	same => n,UserEvent(TestStatus, status: ConfBridge exit)
	same => n,Hangup()

; Phase 1
; 0 should perform playback while 1 performs conference exit
exten => multiple_options, 1, NoOp()
	same => n,Set(CONFBRIDGE(menu,0)=playback(tt-weasels))
	same => n,Set(CONFBRIDGE(menu,1)=leave_conference)
	same => n,ConfBridge(1)
	same => n,UserEvent(TestStatus, status: ConfBridge exit)
	same => n,Hangup()

; Phase 2
; 0 should be in tact from test_menu, 1 should have the test_menu option replaced with the dynamic menu option, 2 should be all new from the dynamic menu option.
exten => template_override, 1, NoOp()
	same => n,Set(CONFBRIDGE(menu,template)=test_menu)
	same => n,Set(CONFBRIDGE(menu,1)=playback(tt-weasels))
	same => n,Set(CONFBRIDGE(menu,2)=leave_conference)
	same => n,ConfBridge(1)
	same => n,UserEvent(TestStatus, status: ConfBridge exit)
	same => n,Hangup()

; Phase 3
; None of the dynamic menu options should be used and everything from the test_menu profile should be in tact.
exten => profile_argument, 1, NoOp()
	same => n,Set(CONFBRIDGE(menu,1)=playback(tt-somethingwrong))
	same => n,Set(CONFBRIDGE(menu,2)=playback(tt-somethingwrong))
	same => n,ConfBridge(1,,,test_menu)
	same => n,UserEvent(TestSTatus, status: ConfBridge exit)

exten => h,1,NoOp()
	same => n,UserEvent(TestStatus, status: Hangup exit)

[default]

exten => sendDTMF,1,NoOp()
	same => n,Verbose(1, Sending DTMF Signal ${DTMF_TO_SEND})
	same => n,SendDTMF(${DTMF_TO_SEND})
	same => n,Goto(wait,1)

exten => sendAudio,1,NoOp()
	same => n,Verbose(1, Sending audio file ${TALK_AUDIO})
	same => n,Playback(${TALK_AUDIO})
	same => n,Goto(wait,1)

exten => sendAudioWithDTMF,1,NoOp()
	same => n,Verbose(1, Sending audio file ${TALK_AUDIO})
	same => n,Playback(${TALK_AUDIO})
	same => n,Verbose(1, Sending DTMF Signal ${DTMF_TO_SEND})
	same => n,SendDTMF(${DTMF_TO_SEND})
	same => n,Goto(wait,1)

exten => hangup,1,NoOp()
	same => n,Verbose(1, Hanging up)
	same => n,Hangup()

exten => wait,1,NoOp()
	same => n,Wait(10000)

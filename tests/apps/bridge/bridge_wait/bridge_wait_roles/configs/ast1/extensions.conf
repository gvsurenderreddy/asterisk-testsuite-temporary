; Test to see if the roles in BridgeWait work as intended

[default]

; ----------------------------------------------------------------------
; ***Required***
; ----------------------------------------------------------------------
[default]
exten => sendDTMF,1,NoOp()
    same => n,Verbose(1, Sending DTMF Signal ${DTMF_TO_SEND})
    same => n,SendDTMF(${DTMF_TO_SEND})
    same => n,Goto(default,wait,1)

exten => sendAudio,1,NoOp()
    same => n,Verbose(1, Sending audio file ${TALK_AUDIO})
    same => n,Playback(${TALK_AUDIO})
    same => n,Goto(default,wait,1)

exten => sendAudioWithDTMF,1,NoOp()
    same => n,Verbose(1, Sending audio file ${TALK_AUDIO})
    same => n,Playback(${TALK_AUDIO})
    same => n,Verbose(1, Sending DTMF Signal ${DTMF_TO_SEND})
    same => n,SendDTMF(${DTMF_TO_SEND})
    same => n,Goto(default,wait,1)

exten => hangup,1,NoOp()
    same => n,Verbose(1, Hanging up)
    same => n,Hangup()

exten => wait,1,NoOp()
    same => n,Wait(10000)

; ------------------------------------------------------------
; Used to place the other end of the local channel into the
; BackgroundDetect application.
; ------------------------------------------------------------
exten => detect,1,NoOp()
    same => n,Set(TALK_DETECTED=0)
    same => n,BackgroundDetect(tt-monkeys,2,100,200,20000)
    same => n,ExecIf($[${TALK_DETECTED}=0]?UserEvent(TestResult,result:fail):UserEvent(TestResult,result:pass))
    same => n,Hangup()

; ------------------------------------------------------------
; The two channels that will enter the holding bridge.
; ------------------------------------------------------------
exten => participant,1,NoOp()
    same => n,Answer()
    same => n,BridgeWait(somebridge,participant,e(s))
    same => n,Hangup()

exten => announcer,1,NoOp()
    same => n,Answer()
    same => n,BridgeWait(somebridge,announcer)
    same => n,Hangup()

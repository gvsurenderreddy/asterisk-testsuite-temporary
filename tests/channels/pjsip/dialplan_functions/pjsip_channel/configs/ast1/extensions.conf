
[default]

exten => test_variable,1,NoOp()
same => n,Set(item=${LOCAL(ARG1)})
same => n,Set(type=${LOCAL(ARG2)})
same => n,Set(specifier=${LOCAL(ARG3)})
same => n,Set(op=${LOCAL(ARG4)})
same => n,Set(expected=${LOCAL(ARG5)})
same => n,Verbose(1, Calling CHANNEL(${item},${type},${specifier}))
same => n,GotoIf($["${CHANNEL(${item},${type},${specifier})}"${op}${expected}]?pass)
same => n,UserEvent(Result, Status: failed, Message: CHANNEL(${item},${type},${specifier}) did not match expected value ${expected} - actual ${CHANNEL(${item},${type},${specifier})})
same => n,Return()
same => n(pass),NoOp()
same => n,Verbose(1, CHANNEL(${item},${type},${specifier}) passed (${CHANNEL(${item},${type},${specifier})}))
same => n,Return()

exten => alice,1,NoOp()
same => n,Answer()

; ---- RTP ----

; Source will often be various things; just make sure we get something back
same => n,GoSub(default,test_variable,1(rtp,src,audio,!=,""))
same => n,GoSub(default,test_variable,1(rtp,dest,audio,=,"127.0.0.1:6000"))
same => n,GoSub(default,test_variable,1(rtp,hold,audio,=,"0"))
same => n,GoSub(default,test_variable,1(rtp,secure,audio,=,"0"))
same => n,GoSub(default,test_variable,1(rtp,direct,audio,=,"(null)"))

; Verify audio is set by default
same => n,GoSub(default,test_variable,1(rtp,dest,,=,"127.0.0.1:6000"))

; No video stream, these should be empty
same => n,GoSub(default,test_variable,1(rtp,src,video,=,""))
same => n,GoSub(default,test_variable,1(rtp,dest,video,=,""))

; ---- RTCP ----

; Can't predict SSRC, make sure we get something back
same => n,GoSub(default,test_variable,1(rtcp,all,audio,!=,""))
same => n,GoSub(default,test_variable,1(rtcp,local_ssrc,audio,!=,""))
same => n,GoSub(default,test_variable,1(rtcp,remote_ssrc,audio,!=,""))

; Check the other summaries
same => n,GoSub(default,test_variable,1(rtcp,all_jitter,audio,=,"minrxjitter=0.000000;maxrxjitter=0.000000;avgrxjitter=0.000000;stdevrxjitter=0.000000;reported_minjitter=0.000000;reported_maxjitter=0.000000;reported_avgjitter=0.000000;reported_stdevjitter=0.000000;"))
same => n,GoSub(default,test_variable,1(rtcp,all_rtt,audio,=,"minrtt=0.000000;maxrtt=0.000000;avgrtt=0.000000;stdevrtt=0.000000;"))
same => n,GoSub(default,test_variable,1(rtcp,all_loss,audio,=,"minrxlost=0.000000;maxrxlost=0.000000;avgrxlost=0.000000;stdevrxlost=0.000000;reported_minlost=0.000000;reported_maxlost=0.000000;reported_avglost=0.000000;reported_stdevlost=0.000000;"))

; Individual values
same => n,GoSub(default,test_variable,1(rtcp,txcount,audio,=,"0"))
same => n,GoSub(default,test_variable,1(rtcp,rxcount,audio,=,"0"))
same => n,GoSub(default,test_variable,1(rtcp,txjitter,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,rxjitter,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,remote_maxjitter,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,remote_minjitter,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,remote_normdevjitter,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,remote_stdevjitter,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,local_maxjitter,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,local_minjitter,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,local_normdevjitter,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,local_stdevjitter,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,txploss,audio,=,"0"))
same => n,GoSub(default,test_variable,1(rtcp,rxploss,audio,=,"0"))
same => n,GoSub(default,test_variable,1(rtcp,remote_maxrxploss,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,remote_minrxploss,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,remote_normdevrxploss,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,remote_stdevrxploss,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,local_maxrxploss,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,local_minrxploss,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,local_normdevrxploss,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,local_stdevrxploss,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,rtt,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,maxrtt,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,minrtt,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,normdevrtt,audio,=,"0.000000"))
same => n,GoSub(default,test_variable,1(rtcp,stdevrtt,audio,=,"0.000000"))

; Audio should be default
same => n,GoSub(default,test_variable,1(rtcp,txcount,,=,"0"))
same => n,GoSub(default,test_variable,1(rtcp,rxcount,,=,"0"))

; Video should be empty
same => n,GoSub(default,test_variable,1(rtcp,all,video,=,""))

; ---- Endpoint ----

same => n,GoSub(default,test_variable,1(endpoint,,,=,"alice"))

; ---- PJSIP/Signalling ----
same => n,GoSub(default,test_variable,1(pjsip,secure,,=,"0"))
same => n,GoSub(default,test_variable,1(pjsip,target_uri,,=,"sip:alice@127.0.0.1:5062"))
same => n,GoSub(default,test_variable,1(pjsip,local_uri,,=,"\"sut\" <sip:alice@127.0.0.1>"))
same => n,GoSub(default,test_variable,1(pjsip,remote_uri,,=,"\"alice\" <sip:alice@127.0.0.1:5062>"))
same => n,GoSub(default,test_variable,1(pjsip,t38state,,=,"DISABLED"))
same => n,GoSub(default,test_variable,1(pjsip,local_addr,,=,"127.0.0.1:5061"))
same => n,GoSub(default,test_variable,1(pjsip,remote_addr,,=,"127.0.0.1:5062"))

same => n,UserEvent(Result, Status: passed)
same => n,Hangup()

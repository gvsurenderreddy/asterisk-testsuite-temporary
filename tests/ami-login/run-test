#!/usr/bin/env python
'''
Copyright (C) 2010, Digium, Inc.
Russell Bryant <russell@digium.com>

This program is free software, distributed under the terms of
the GNU General Public License Version 2.
'''

import sys
import os
import shutil
import time
from twisted.application import service, internet
from twisted.internet import reactor, defer
from starpy import manager

sys.path.append("lib/python")
from asterisk.asterisk import Asterisk


class AMILoginTest:
    def __init__(self):
        self.passed = False
        self.last_step = ""
        self.ami = None

        reactor.callWhenRunning(self.run)

        print "Creating Asterisk instance ..."
        self.asterisk = Asterisk(base=os.path.join(os.getcwd(),
                                                   "tests/ami-login/tmp"))
        self.asterisk.install_config("tests/ami-login/configs/manager.conf")
        self.asterisk.install_config("tests/ami-login/configs/logger.conf")

    def start_asterisk(self):
        self.log_last_step("Starting Asterisk")
        self.asterisk.start()

    def stop_asterisk(self):
        self.log_last_step("Stopping Asterisk")
        self.asterisk.stop()

    def log_last_step(self, step):
        print step
        self.last_step = step

    def on_error(self, ami):
        print "ERROR, Last Step: {0}".format(self.last_step)
        reactor.stop()
        self.stop_asterisk()

    def on_logoff(self, ami):
        self.log_last_step("Logoff Successful")
        self.passed = True
        reactor.stop()

    def on_pong(self, ami):
        self.log_last_step("Got Pong")
        self.ami.logoff().addCallbacks(self.on_logoff, self.on_error)

    def on_connect(self, ami):
        self.log_last_step("Connected to the AMI")
        self.ami = ami
        self.ami.ping().addCallbacks(self.on_pong, self.on_error)

    def run(self):
        self.start_asterisk()

        self.log_last_step("Logging in to the AMI")
        self.ami_factory = manager.AMIFactory("user", "mysecret")
        self.ami_factory.login('127.0.0.1', 5038).addCallbacks(self.on_connect,
                                                               self.on_error)


def main():
    test = AMILoginTest()
    reactor.run()
    test.stop_asterisk()
    if test.passed:
        return 0
    return 1


if __name__ == "__main__":
    sys.exit(main() or 0)


# vim:sw=4:ts=4:expandtab:textwidth=79

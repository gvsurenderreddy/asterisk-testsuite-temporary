#!/usr/bin/env python
'''
Copyright (C) 2010, Digium, Inc.
Terry Wilson <twilson@digium.com>

This program is free software, distributed under the terms of
the GNU General Public License Version 2.
'''

import sys
import os
import logging
import re
sys.path.append("lib/python")
from asterisk.asterisk import Asterisk
from asterisk.cdr import AsteriskCSVCDR, AsteriskCSVCDRLine
from asterisk.TestCase import TestCase
from asterisk.CDRTestCase import CDRTestCase
from twisted.internet import reactor

logger = logging.getLogger(__name__)

class Fork_Before_Dial_Test(CDRTestCase):
    def __init__(self):
        CDRTestCase.__init__(self)

        self.add_expectation('cdrtest_local', AsteriskCSVCDRLine(
            destination="1",
            dcontext="default",
            channel="Local/1@default-.*",
            disposition="ANSWERED",
            amaflags="DOCUMENTATION"
        ))
        self.add_expectation('cdrtest_local', AsteriskCSVCDRLine(
            destination="1",
            dcontext="default",
            channel="Local/1@default-.*",
            disposition="ANSWERED",
            amaflags="DOCUMENTATION"
        ))
        self.add_expectation('cdrtest_sip', AsteriskCSVCDRLine(
            destination="2",
            dcontext="default",
            channel="SIP/test-.*",
            disposition="ANSWERED",
            amaflags="DOCUMENTATION"
        ))

    def match_cdrs(self):
        CDRTestCase.match_cdrs(self)

        if (self.passed == False):
            return

        cdr1 = AsteriskCSVCDR(fn="%s/%s/cdr-csv/%s.csv" % (self.ast[0].base, self.ast[0].directories['astlogdir'], "cdrtest_local"))

        if int(cdr1[0].duration) < int(cdr1[1].duration):
            logger.error("Fail: Original CDR duration shorter than forked")
            self.passed = False

def main():
    test = Fork_Before_Dial_Test()
    test.start_asterisk()
    reactor.run()
    test.stop_asterisk()
    return test.results()

if __name__ == '__main__':
    sys.exit(main())
#!/usr/bin/env python
'''
Copyright (C) 2010, Digium, Inc.
Terry Wilson <twilson@digium.com>

This program is free software, distributed under the terms of
the GNU General Public License Version 2.
'''

import sys
from time import sleep
import os
sys.path.append("lib/python")
from asterisk.asterisk import Asterisk
from asterisk.cdr import AsteriskCSVCDR, AsteriskCSVCDRLine
from asterisk.ami import AMI
from twisted.internet import reactor
import logging

workingdir = "cdr/nocdr"
testdir = "tests/%s" % workingdir

class Test:
    def __init__(self):
        self.passed = False

        self.ast1 = Asterisk(base=workingdir)
        self.ast1.install_configs("%s/configs/ast1" % (testdir))

        self.ast1.start()

        reactor.callLater(30, self.stop_reactor)

        self.ami = AMI(self.start, self.stop_reactor, timeout=20)
        self.ami.login()

    def start(self, ami):
        ami.registerEvent('Hangup', self.end)
        ami.originate(channel = "Local/1@default", application = "Echo")

    def stop_asterisk(self):
        self.ast1.stop()

    def stop_reactor(self):
        print "Stopping Reactor ..."
        if reactor.running:
            reactor.stop()
        self.stop_asterisk()

    def end(self, ami, event):
        self.stop_reactor()

        print "The failure to open the next CDR is expected"
        cdr1 = AsteriskCSVCDR(fn="%s/var/log/asterisk/cdr-csv/Master.csv" % (self.ast1.base))

        if len(cdr1) == 1 and cdr1[0].lastapp == "Echo":
            # There will be 1 CDR record for the second end of the originated channel.
            print "Success"
            self.passed = True
        else:
            print "Failure"

def main():
    logging.basicConfig()
    test = Test()
    reactor.run()
    return not test.passed

if __name__ == '__main__':
    sys.exit(main())

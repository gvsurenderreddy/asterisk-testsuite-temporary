; Tests the AstDB.

[test]

; ----------------------------------------------------------------------
; Extension s1 tests the DB function and DB_RESULT channel variable.
; ----------------------------------------------------------------------

exten => s1,1,NoOp()
    same => n,Answer()
    same => n,Set(DB(test/count)=100)
    same => n,ExecIf($[${DB(test/count)}=100&${DB_RESULT}=100]?UserEvent(Test1,result:pass))
    same => n,Set(DB(test/count2)=200)
    same => n,ExecIf($[${DB(test/count)}=100&${DB(test/count2)}=200]?UserEvent(Test1,result:pass))
    same => n,Set(DB(test/count)=300)
    same => n,ExecIf($[${DB(test/count)}=300]?UserEvent(Test1,result:pass))
    same => n,Set(DB(othertest/count)=400)
    same => n,ExecIf($[${DB(test/count)}=300&${DB(othertest/count)}=400]?UserEvent(Test1,result:pass))
    same => n,Set(COUNT=${DB(notest/count)})
    same => n,ExecIf($[${LEN(${COUNT})}=0]?UserEvent(Test1,result:pass))
    same => n,Hangup()

; ----------------------------------------------------------------------
; Extension s2 tests the DB_EXISTS and DB_KEYS functions.
; ----------------------------------------------------------------------

exten => s2,1,NoOp()
    same => n,Answer()
    same => n,ExecIf($[${DB_EXISTS(thistest/count)}=0]?UserEvent(Test2,result:pass))
    same => n,Set(KEY_LIST=${DB_KEYS(thistest)})
    same => n,ExecIf($[${LEN(${KEY_LIST})}=0]?UserEvent(Test2,result:pass))
    same => n,Set(DB(thistest/count)=100)
    same => n,ExecIf($[${DB_EXISTS(thistest/count)}=1]?UserEvent(Test2,result:pass))
    same => n,ExecIf($[${DB_RESULT}=100]?UserEvent(Test2,result:pass))
    same => n,Set(KEY_LIST=${DB_KEYS(thistest)})
    same => n,ExecIf($[${KEY_LIST}=count]?UserEvent(Test2,result:pass))
    same => n,Set(DB(thistest/count2)=200)
    same => n,Set(KEY_LIST=${DB_KEYS(thistest)})
    same => n,ExecIf($[${KEY_LIST}=count,count2]?UserEvent(Test2,result:pass))
    same => n,Hangup()

; ----------------------------------------------------------------------
; Extension s3 tests the DB_DELETE function.
; ----------------------------------------------------------------------

exten => s3,1,NoOp()
    same => n,Answer()
    same => n,Set(COUNT=${DB_DELETE(sometest/count)})
    same => n,ExecIf($[${LEN(${COUNT})}=0]?UserEvent(Test3,result:pass))
    same => n,Set(DB(sometest/count)=100)
    same => n,Set(COUNT=${DB_DELETE(sometest/count)})
    same => n,ExecIf($[${COUNT}=100&${DB_RESULT}=100]?UserEvent(Test3,result:pass))
    same => n,Set(COUNT=${DB(sometest/count)})
    same => n,ExecIf($[${LEN(${COUNT})}=0]?UserEvent(Test3,result:pass))
    same => n,Hangup()

[default]

; ----------------------------------------------------------------------
; Tests a non-existant AGI script
; ----------------------------------------------------------------------
exten => doesnotexist,1,NoOp()
    same => n,Answer()
    same => n,AGI(i-do-not-exist.agi)
    same => n,UserEvent(TestResult,result:${IF($[${AGISTATUS}=NOTFOUND]?pass:fail)})
    same => n,Hangup()

; ----------------------------------------------------------------------
; Tests a non-existant AGI interpreter
; ----------------------------------------------------------------------
exten => badinterpreter,1,NoOp()
    same => n,Answer()
    same => n,AGI(${EXTEN}.agi)
    same => n,UserEvent(TestResult,result:${IF($[${AGISTATUS}=FAILURE]?pass:fail)})
    same => n,Hangup()

; ----------------------------------------------------------------------
; Tests a non-executable AGI script
; ----------------------------------------------------------------------
exten => badinterpreter2,1,NoOp()
    same => n,Answer()
    same => n,AGI(${EXTEN}.agi)
    same => n,UserEvent(TestResult,result:${IF($[${AGISTATUS}=FAILURE]?pass:fail)})
    same => n,Hangup()

; ----------------------------------------------------------------------
; Tests a non-executable AGI interpreter
; ----------------------------------------------------------------------
exten => badinterpreter3,1,NoOp()
    same => n,Answer()
    same => n,AGI(${EXTEN}.agi)
    same => n,UserEvent(TestResult,result:${IF($[${AGISTATUS}=FAILURE]?pass:fail)})
    same => n,Hangup()

;----------------------------------------------------------------------
; Tests an AGi that does nothing and exits normally
; ----------------------------------------------------------------------
exten => donothing,1,NoOp()
    same => n,Answer()
    same => n,AGI(${EXTEN}.agi)
    same => n,UserEvent(TestResult,result:${IF($[${AGISTATUS}=SUCCESS]?pass:fail)})
    same => n,Hangup()

[executing-extens]

; ----------------------------------------------------------------------
; Tests an AGI that receives a hangup while executing a command
; ----------------------------------------------------------------------
exten => executing,1,NoOp()
    same => n,Answer()
    same => n,Set(AGIEXITONHANGUP=yes)
    same => n,AGI(${EXTEN}.agi)

; ----------------------------------------------------------------------
; Gets the AGISTATUS of the executing.agi script
; ----------------------------------------------------------------------
exten => h,1,NoOp()
    same => n,UserEvent(TestResult,result:${IF($[${AGISTATUS}=HANGUP]?pass:fail)})
    same => n,Hangup()

[waiting-extens]

; ----------------------------------------------------------------------
; Tests an AGI that receives a hangup while waiting for a command
; ----------------------------------------------------------------------
exten => waiting,1,NoOp()
    same => n,Answer()
    same => n,AGI(${EXTEN}.agi)

; ----------------------------------------------------------------------
; Used to determine if the waiting.agi script returned HANGUP.
; ----------------------------------------------------------------------
exten => h,1,NoOp()
    same => n,UserEvent(TestResult,result:${IF($[${AGISTATUS}=HANGUP]?pass:fail)})
    same => n,Hangup()

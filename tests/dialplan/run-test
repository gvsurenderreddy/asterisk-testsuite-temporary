#!/usr/bin/env python
'''
Copyright (C) 2011, Digium, Inc.
Paul Belanger <pabelanger@digium.com>

This program is free software, distributed under the terms of
the GNU General Public License Version 2.
'''

import sys
import logging

from twisted.internet import reactor

sys.path.append("lib/python")
from asterisk.TestCase import TestCase

logger = logging.getLogger(__name__)

class DialPlanTest(TestCase):

    def __init__(self):
        super(DialPlanTest, self).__init__()
        self.create_asterisk()

    def run(self):
        super(DialPlanTest, self).run()
        self.create_ami_factory()

    def ami_connect(self, ami):
        super(DialPlanTest, self).ami_connect(ami)

        ami.registerEvent("UserEvent", self.ami_UserEvent)
        ami.originate(
                channel = "Local/s@DialContext",
                exten = "s",
                priority = "1",
                context = "test"
        )

    def ami_UserEvent(self, ami, event):
        event_type = event.get("userevent")
        if event_type != "TestResult" and event_type != "TestStatus":
            return

        if event_type == "TestResult":
            result = event.get("result")
            if result  == "True":
                self.passed = True
                logger.info('Test passed!')
            else:
                self.passed = False
                logger.warn('Test failed!')
            self.stop_reactor()
        elif event_type == "TestStatus":
            message = event.get("message")
            logger.debug(message)
        else:
            logger.warn("Unknown event type %s received" % event_type)

def main(argv=None):
    test = DialPlanTest()
    test.start_asterisk()
    reactor.run()
    test.stop_asterisk()
    if test.passed:
        return 0
    return 1

if __name__ == "__main__":
    sys.exit(main() or 0)


# vim:sw=4:ts=4:expandtab:textwidth=79
